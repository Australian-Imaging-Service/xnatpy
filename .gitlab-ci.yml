include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml

stages:
  - test
  - release

code_quality:
  needs: []
  artifacts:
    paths: 
      - gl-code-quality-report.json

dependency_scanning:
  needs: []
  artifacts:
    paths:
      - gl-dependency-scanning-report.json

license_scanning:
  needs: []
  artifacts:
    paths:
      - gl-license-scanning-report.json
    reports:
      license_scanning: gl-license-scanning-report.json


.parallel:
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.7", "3.8", "3.9", "3.10", "3.11"]

test:
  parallel: !reference [.parallel,parallel]
  needs: []
  stage: test
  image: python:${PYTHON_VERSION}-slim
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - name: 'docker:dind'
      alias: 'docker'
  allow_failure: false
  script:
    - pip install --upgrade pip wheel setuptools
    - pip install -r test_requirements.txt
    - tox -e py${PYTHON_VERSION//./}
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  artifacts:
    reports:
      junit: junit*.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage*.xml


release-test-pypi-py3:
  needs:
    - test
  stage: release
  image: python:3.7-slim
  variables:
    TWINE_USERNAME: $TEST_PYPI_USERNAME
    TWINE_PASSWORD: $TEST_PYPI_PASSWORD
  script:
    - pip install -U twine wheel setuptools
    - python setup.py sdist bdist_wheel
    - twine check dist/*
    - twine upload --repository testpypi dist/*
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

release-pypi-py3:
  needs:
    - test
  stage: release
  image: python:3.7-slim
  variables:
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  script:
    - pip install -U twine wheel setuptools
    - python setup.py sdist bdist_wheel
    - twine check dist/*
    - twine upload dist/*
  rules:
    - if: $CI_COMMIT_TAG
